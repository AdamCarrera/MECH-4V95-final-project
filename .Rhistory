P <- {0, 0, 1}
P <- [0, 0, 1]
P <- c(0, 0, 1)
P_CS <- c(1, 1, 1)
SPI <- P / P_CS
P <- c(0, 0, 0, 0, 0, 0, 33, 276, 378, 524, 856, 798, 838, 819, 751, 595, 465, 300, 148, 0, 0, 0, 0, 0)
P_CS <- c(0, 0, 0, 0, 0, 0, 139, 336, 537, 716, 856, 945, 976, 946, 858, 720, 544, 645, 148, 0, 0, 0, 0, 0)
SPI <- P / P_CS
PC <- numeric()
for (i in 1:nrow(data_frame)) {
j = i + 1
# Sometimes SPI is NaN (0/0 is not a number)
# So adjust the formula is that is the case
if (is.nan(SPI[i])) {
PC <- append(PC, data_frame$GHI[i] )
}
else {
PC <- append(PC, data_frame$GHI[i] + SPI[i] * (data_frame$GHI[j] - data_frame$GHI[i]))
}
}
for (i in 1:nrow(data_frame)) {
j = i + 1
# Sometimes SPI is NaN (0/0 is not a number)
# So adjust the formula is that is the case
if (is.nan(SPI[i])) {
PC <- append(PC, P[i] )
}
else {
PC <- append(PC, P[i] + SPI[i] * (P_CS[j] - P_CS[i]))
}
}
for (i in 1:length(P)) {
j = i + 1
# Sometimes SPI is NaN (0/0 is not a number)
# So adjust the formula is that is the case
if (is.nan(SPI[i])) {
PC <- append(PC, P[i] )
}
else {
PC <- append(PC, P[i] + SPI[i] * (P_CS[j] - P_CS[i]))
}
}
P
PC
for (i in 2:length(P)) {
j = i - 1
# Sometimes SPI is NaN (0/0 is not a number)
# So adjust the formula is that is the case
if (is.nan(SPI[i])) {
PC <- append(PC, P[j] )
}
else {
PC <- append(PC, P[j] + SPI[j] * (P_CS[i] - P_CS[j]))
}
}
2:length(P)
P <- c(0, 0, 0, 0, 0, 0, 33, 276, 378, 524, 856, 798, 838, 819, 751, 595, 465, 300, 148, 0, 0, 0, 0, 0)
P_CS <- c(0, 0, 0, 0, 0, 0, 139, 336, 537, 716, 856, 945, 976, 946, 858, 720, 544, 645, 148, 0, 0, 0, 0, 0)
SPI <- P / P_CS
PC <- numeric()
for (i in 2:length(P)) {
j = i - 1
# Sometimes SPI is NaN (0/0 is not a number)
# So adjust the formula is that is the case
if (is.nan(SPI[i])) {
PC <- append(PC, P[j] )
}
else {
PC <- append(PC, P[j] + SPI[j] * (P_CS[i] - P_CS[j]))
}
}
PC
SPI
P
PC
P_CS
PC <- numeric()
for (i in 2:length(P)) {
j = i - 1
# Sometimes SPI is NaN (0/0 is not a number)
# So adjust the formula is that is the case
if (is.nan(SPI[j])) {
PC <- append(PC, P[j] )
}
else {
PC <- append(PC, P[j] + SPI[j] * (P_CS[i] - P_CS[j]))
}
}
PC
library(forecast)
setwd("~/GitHub/MECH-4V95-final-project")
path_to_files = paste0(getwd(), "/data/")
source(paste0(getwd(), '/preprocessing.R'))
data_set <- preprocess(path_to_files)
y <- ts(y, start = 0, frequency = 13)
autoplot(y)
y <- data_set[[1]][1:286,3]
y <- ts(y, start = 0, frequency = 13)
autoplot(y)
adf.test(y, k = 13)
library(tseries)
adf.test(y, k = 13)
y_2 <- diff(y, differences = 1)
adf.test(y_2, k = 13)
autoplot(y_2)
Pacf(y_2) # p = 7
acf(y_2) # q = 8
tsMod <- Arima(y = y, order = c(7, 1, 8))
autoplot(forecast(tsMod, h=13)) # 1 hour ahead forecast
tsMod
forecast(tsMod, h=13)
z <- forecast(tsMod, h = 13)
z$fitted
z$level
z$x
z
z$mean
y_forecast <- forecast(tsMod, h=13)
y_predict <- y_forecast$mean
y_real <- y[286:299]
y_real <- data_set[[1]][286:299,3]
library(ggplot2)
?ggplot
a <- data_set[[1]][1:286,]
library(lubridate)
ggplot(data = y, aes(x = value, y = ymd_hms(dttm_utc))) + geom_line()
ggplot(data = a, aes(x = value, y = ymd_hms(dttm_utc))) + geom_line()
ggplot(data = a, aes(y = value, x = ymd_hms(dttm_utc))) + geom_line()
p <- ggplot(data = a, aes(y = value, x = ymd_hms(dttm_utc))) + geom_line()
p + labs(x = "Date Time", y = "Consumption")
p + labs(x = "Date Time", y = "Consumption") + title("Electrical Consumption")
p + labs(x = "Date Time", y = "Consumption") + main("Electrical Consumption")
p + labs(x = "Date Time", y = "Consumption",
title = "Electrical Consumpiton, Building 1")
p <- ggplot(data = data_set, aes(y = value, x = ymd_hms(dttm_utc))) + geom_line(size = 3)
p + labs(x = "Date Time", y = "Consumption",
title = "Time Series Electrical Consumpiton, Building 1")
a <- data_set[[1]][1:286,]
consumption_plot <- function(data_set, building_number) {
p <- ggplot(data = data_set, aes(y = value, x = ymd_hms(dttm_utc))) + geom_line(size = 3)
p + labs(x = "Date Time", y = "Consumption",
title = "Time Series Electrical Consumpiton, Building 1")
}
consumption_plot(a, 3)
a <- data_set[[1]][1:286,]
consumption_plot <- function(data_set, building_number) {
p <- ggplot(data = data_set, aes(y = value, x = ymd_hms(dttm_utc))) + geom_line(size = 1)
p + labs(x = "Date Time", y = "Consumption",
title = "Time Series Electrical Consumpiton, Building 1")
}
consumption_plot(a, 3)
a <- data_set[[1]][1:286,]
consumption_plot <- function(data_set, building_number) {
title <- c("Time Series Electrical Consumpiton, Building 1", building_number)
p <- ggplot(data = data_set, aes(y = value, x = ymd_hms(dttm_utc))) + geom_line(size = 1)
p + labs(x = "Date Time", y = "Consumption",
title = title)
}
consumption_plot(a, 3)
title <- c("Time Series Electrical Consumpiton, Building 1", building_number)
title <- c("Time Series Electrical Consumpiton, Building 1", 3)
a <- data_set[[1]][1:286,]
consumption_plot <- function(data_set, building_number) {
title <- paste0("Time Series Electrical Consumpiton, Building ", building_number)
p <- ggplot(data = data_set, aes(y = value, x = ymd_hms(dttm_utc))) + geom_line(size = 1)
p + labs(x = "Date Time", y = "Consumption",
title = title)
}
consumption_plot(a, 3)
source(paste0(getwd(), '/plot_time_series.R'))
consumption_plot(data_set = data_set[[1]][1:286], building_number = 1)
consumption_plot(data_set = data_set[[1]][1:286,], building_number = 1)
consumption_plot(data_set = data_set[[1]][1:286,], building_number = 1)
